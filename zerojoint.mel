proc int vfySelection () {
  $selection = `ls -sl`;
  $jointselection = `ls -sl -exactType "joint"`;
  $numJoints = size($jointselection);
  $selectionSize = size($selection);
  if ( $selectionSize > 1 ) {
    print "More than one object selected.\n";
  } else if ( $selectionSize == 0 ) {
    print "No object selected.\n";
  } else if ( $numJoints != 1 ) {
    print "Selection is not a joint.\n";
  } else {
    return 1;
  }
  return 0;
}

global proc zeroJoint() {
  if ( vfySelection() == 1) {
    $parentJoint = `ls -sl`;
    $childrenJoints = `listRelatives -type joint $parentJoint`;
    // need to act on the parent before acting on the child
    for ( $childJoint in $childrenJoints ) {
      $groupName = $childJoint + "_zero";
      $groupTransName = $groupName + ".translate";
      $groupRotName = $groupName + ".rotate";
      $cjRotXName = $childJoint + ".rotateX";
      $cjRotYName = $childJoint + ".rotateY";
      $cjRotZName = $childJoint + ".rotateZ";
      $grpRotXName = $groupName + ".rotateX";
      $grpRotYName = $groupName + ".rotateY";
      $grpRotZName = $groupName + ".rotateZ";
      $childJointRotName = $childJoint + ".rotate";
      $cjRotX = `getAttr $cjRotXName`;
      $cjRotY = `getAttr $cjRotYName`;
      $cjRotZ = `getAttr $cjRotZName`;
      group -em -n $groupName;
      // need to check for and handle multiple parents
      $cjParent = `listRelatives -p $childJoint`;
      parent $childJoint $groupName;
      setAttr $groupTransName 0 0 0;
      setAttr $groupRotName 0 0 0;
      parent $groupName $cjParent;
      parent $childJoint $groupName;
      $grpRotX = `getAttr $grpRotXName`;
      $grpRotY = `getAttr $grpRotYName`;
      $grpRotZ = `getAttr $grpRotZName`;
      setAttr $groupRotName ($grpRotX + $cjRotX) ($grpRotY + $cjRotY) ($grpRotZ + $cjRotZ);
      setAttr $childJointRotName 0 0 0;
    }
  }
}

// global proc zeroJoint( string args ) {
//   if ( vfyArgs(args) == 1 ) {
//
//  }
// }

// proc int vfyArgs( string args ) {
//   (args == "r") ? return 1 : return 0;
// }
