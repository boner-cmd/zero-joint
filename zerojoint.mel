proc int vfySelection () {
  $selection = `ls -sl`;
  $jointselection = `ls -sl -exactType "joint"`;
  if ( size($selection) > 1 ) {
    print "More than one object selected.\n";
  } else if ( size($selection) == 0 ) {
    print "No object selected.\n";
  } else if ( size($jointselection) != 1 ) {
    print "Selection is not a joint.\n";
  } else {
    return 1;
  }
  return 0;
}

proc makeGroup ( string $targetJoint ) {
  $groupName = $targetJoint + "_zero";
  group -em -n $groupName;
  // need to check for and handle multiple parents
  $tjParent = `listRelatives -p $targetJoint`;
  parent $groupName $targetJoint;
  setAttr ($groupName + ".translate") 0 0 0;
  setAttr ($groupName + ".rotate") 0 0 0;
  parent $groupName $tjParent;
  parent $targetJoint $groupName;
  setAttr ($groupName + ".rotate")
    (`getAttr ($groupName + ".rotateX")` + `getAttr ($targetJoint + ".rotateX")`)
    (`getAttr ($groupName + ".rotateY")` + `getAttr ($targetJoint + ".rotateY")`)
    (`getAttr ($groupName + ".rotateZ")` + `getAttr ($targetJoint + ".rotateZ")`);
  setAttr $targetJoint + ".rotate" 0 0 0;
}

global proc zeroJoint() {
  if ( vfySelection() == 1) {
    $parentJoint = `ls -sl`;
    makeGroup($parentJoint);
    $childrenJoints = `listRelatives -type joint -ad $parentJoint`;
    for ( $childJoint in $childrenJoints ) makeGroup($childJoint);
  }
}
